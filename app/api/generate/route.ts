import { NextRequest, NextResponse } from 'next/server'
import openai from '@/lib/openai'

export async function POST(req: NextRequest) {
  const { job, candidate, templateType } = await req.json()

  let prompt = ''

  if (templateType === 'oneness') {
    prompt = `
以下の「求人情報」と「候補者情報」をもとに、株式会社ONENESSの藤田が送るスカウト文を以下のフォーマット通りに出力してください。

【出力形式】
1. 件名（Subject）：1行で求人の訴求ポイントで構成。候補者名などは入れない
2. 本文（Body）：以下に厳密に従ってください（---本文開始--- と ---本文終了--- で囲んでください）

【本文フォーマット】
---本文開始---

{候補者名}様

初めまして。ハイクラス人材に強みを持つ転職エージェント・株式会社ONENESSの藤田と申します。
ご経験を拝見し、ご紹介したい案件がありご連絡を致しました。

【なぜご連絡したか】

* （マッチポイント1）
* （マッチポイント2）
* （マッチポイント3〜4）

（候補者のご経験や志向）を、（企業のフェーズや事業）で活かしていただけるポジションと考えております。
将来的には（キャリアビジョン）などを担っていただけるキャリアも開けるポジションです。

お手すきの際に以下、ご確認いただきご返信いただければ幸いでございます。

ーーーーーーーーーーーーー
■社名：
■会社概要：
■職種名：
■採用背景：しっかりと訴求できるような内容で、1行で端的にしたりしない
■業務内容：箇条書きで
■特徴：箇条書きで刺さりそうなポイントを
■求める人物像：
■給与：
■勤務地：
■休日・休暇：
ーーーーーーーーーーーーー

詳細に関しましては一度、エージェントとの30分ほどの面談（電話orオンラインor対面）のお時間を頂き、お話できればと存じます。
お手数ですがご返信頂けますと幸いです。宜しくお願い致します。

---本文終了---

【求人情報】
${job}

【候補者情報】
${candidate}
`
  } else if (templateType === 'casual') {
    prompt = `
以下の情報をもとに、ややカジュアルな文体でスカウト文を作成してください。
転職エージェントとして、候補者に柔らかく案件をご案内する構成としてください。

【出力形式】
1. 件名（Subject）：1行で求人の訴求ポイントで構成。候補者名などは入れない
2. 本文（Body）：以下に厳密に従ってください（---本文開始--- と ---本文終了--- で囲んでください）

【求人情報】
${job}

【候補者情報】
${candidate}
`
  } else if (templateType === 'cxo') {
    prompt = `
以下の情報をもとに、CxO・経営幹部向けのスカウト文を転職エージェントとして作成してください。

- トーンは論理的／簡潔／上流キャリア視点
- 組織設計、意思決定、事業責任を担う点を強調
【出力形式】
1. 件名（Subject）：1行で求人の訴求ポイントで構成。候補者名などは入れない
2. 本文（Body）：以下に厳密に従ってください（---本文開始--- と ---本文終了--- で囲んでください）

【求人情報】
${job}

【候補者情報】
${candidate}
`
  } else if (templateType === 'startup') {
    prompt = `
以下の情報をもとに、スタートアップ企業に対する転職機会を、熱量をもって案内するスカウト文を転職エージェントとして作成してください。

- ミッション共感・裁量・急成長環境を訴求
- トーンは情熱的でありながら丁寧

【出力形式】
1. 件名（Subject）：1行で求人の訴求ポイントで構成。候補者名などは入れない
2. 本文（Body）：以下に厳密に従ってください（---本文開始--- と ---本文終了--- で囲んでください）

【求人情報】
${job}

【候補者情報】
${candidate}
`
  } else if (templateType === 'global') {
    prompt = `
以下の情報をもとに、外資系・グローバル環境を志向する方へのスカウト文を、転職エージェントとして作成してください。

- 英語環境、多様性、国際視点を訴求

【出力形式】
1. 件名（Subject）：1行で求人の訴求ポイントで構成。候補者名などは入れない
2. 本文（Body）：以下に厳密に従ってください（---本文開始--- と ---本文終了--- で囲んでください）

【求人情報】
${job}

【候補者情報】
${candidate}
`
  } else {
    prompt = `
以下の情報をもとに、転職エージェントが候補者に送るスカウト文を作成してください。
出力形式：
1. 件名（Subject）：1行で訴求ポイント要約（候補者名を含めない）
2. 本文（Body）：---本文開始--- 〜 ---本文終了--- の間で出力

【求人情報】
${job}

【候補者情報】
${candidate}
    `
  }

  const response = await openai.chat.completions.create({
    model: 'gpt-4o',
    messages: [
      { role: 'system', content: 'あなたはプロの転職エージェントです。' },
      { role: 'user', content: prompt },
    ],
    temperature: 0.7,
  })

  const fullOutput = response.choices[0].message.content || ''

  const subjectMatch = fullOutput.match(/^件名[:：]?[ \t]*([^\n]+)$/m)
  const bodyMatch = fullOutput.match(/^本文[:：]?[\s]*---本文開始---([\s\S]*?)---本文終了---\s*$/m)

  return NextResponse.json({
    subject: subjectMatch?.[1]?.trim() || '',
    result: bodyMatch?.[1]?.trim() || fullOutput,
  })
}